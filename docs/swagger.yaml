definitions:
  model.ApiKey:
    properties:
      detectorID:
        type: integer
      id:
        type: integer
      key:
        type: string
      scopes:
        items:
          type: string
        type: array
    type: object
  model.Detector:
    properties:
      id:
        type: integer
      name:
        type: string
      serial:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple weather server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API of the weather server
  version: "0.1"
paths:
  /apikeys:
    get:
      consumes:
      - application/json
      description: get all api keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ApiKey'
            type: array
      summary: List api keys
    post:
      consumes:
      - application/json
      description: create api key
      parameters:
      - description: Id of detector
        in: query
        name: detector_id
        required: true
        type: integer
      - description: scopes
        in: query
        name: scopes
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/string'
      summary: Create api key
  /detectors:
    get:
      consumes:
      - application/json
      description: get all detectors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Detector'
            type: array
      summary: List detectors
    post:
      consumes:
      - application/json
      description: create detector
      parameters:
      - description: Detector
        in: body
        name: detector
        required: true
        schema:
          $ref: '#/definitions/model.Detector'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Detector'
      summary: create detector
  /detectors/{id}:
    delete:
      consumes:
      - application/json
      description: delete detector
      parameters:
      - description: Id of detector
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      summary: delete detector
    get:
      consumes:
      - application/json
      description: get detector by id
      parameters:
      - description: Id of detector
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Detector'
      summary: get detector by id
    post:
      consumes:
      - application/json
      description: update detector
      parameters:
      - description: Id of detector
        in: path
        name: id
        required: true
        type: integer
      - description: Detector
        in: body
        name: detector
        required: true
        schema:
          $ref: '#/definitions/model.Detector'
      produces:
      - application/json
      summary: update detector
swagger: "2.0"
